--CREATE USER SEMIPRJ IDENTIFIED BY 1234;
--GRANT RESOURCE , CONNECT TO SEMIPRJ;
--ALTER USER SEMIPRJ DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;
/* 초록부분 */
CREATE TABLE NOTICE (
   NOTICE_NO   NUMBER   NOT NULL,
   NOTICE_TITLE   VARCHAR2(200)   NULL,
   NOTICE_CONTENT   VARCHAR2(4000)   NULL,
   NOTICE_DATE   DATE DEFAULT SYSDATE,
   IS_DELETED CHAR(1)   NULL,
   ADMIN_NO   NUMBER   NOT NULL
);

ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
   NOTICE_NO
);

ALTER TABLE NOTICE ADD CONSTRAINT FK_ADMIN_TO_NOTICE_1 FOREIGN KEY (
   ADMIN_NO
)
REFERENCES ADMIN (
   ADMIN_NO
);

CREATE TABLE PERMISSION (
   PM_NO   NUMBER   NOT NULL,
   PM_NAME   VARCHAR2(50)   NULL,
   PM_CONTENT   VARCHAR2(200)   NULL,
   PM_LEVEL   NUMBER   NULL
);

ALTER TABLE PERMISSION ADD CONSTRAINT PK_PERMISSION PRIMARY KEY (
   PM_NO
);

CREATE TABLE EVENT_IMG (
   EVENT_IMG_NO   NUMBER   NOT NULL,
   EVENT_IMG   VARCHAR2(500)   NULL,
   EVENT_NO   NUMBER   NOT NULL
);

ALTER TABLE EVENT_IMG ADD CONSTRAINT PK_EVENT_IMG PRIMARY KEY (
   EVENT_IMG_NO
);

ALTER TABLE EVENT_IMG ADD CONSTRAINT FK_EVENT_TO_EVENT_IMG_1 FOREIGN KEY (
   EVENT_NO
)
REFERENCES EVENT (
   EVENT_NO
);

CREATE TABLE FAQ (
   FAQ_NO   NUMBER   NOT NULL,
   FAQ_TITLE   VARCHAR2(200)   NULL,
   FAQ_CONTENT   VARCHAR2(4000)   NULL,
   FAQ_ANSWER   VARCHAR2(4000)   NULL,
   FAQ_ANSWER_DATE DATE DEFAULT SYSDATE,
   IS_DELETED CHAR(1)   NULL,
   ADMIN_NO   NUMBER   NOT NULL
);

ALTER TABLE FAQ ADD CONSTRAINT PK_FAQ PRIMARY KEY (
   FAQ_NO
);

ALTER TABLE FAQ ADD CONSTRAINT FK_ADMIN_TO_FAQ_1 FOREIGN KEY (
   ADMIN_NO
)
REFERENCES ADMIN (
   ADMIN_NO
);

CREATE TABLE ADMIN (
   ADMIN_NO   NUMBER   NOT NULL,
   ADMIN_ID   VARCHAR2(50)   NULL,
   ADMIN_PWD   VARCHAR2(100)   NULL,
   ADMIN_NAME   VARCHAR2(50)   NULL,
   CREATE_TIME   DATE DEFAULT SYSDATE,
   PM_NO   NUMBER   NOT NULL
);

ALTER TABLE ADMIN ADD CONSTRAINT PK_ADMIN PRIMARY KEY (
   ADMIN_NO
);

ALTER TABLE ADMIN ADD CONSTRAINT FK_PERMISSION_TO_ADMIN_1 FOREIGN KEY (
   PM_NO
)
REFERENCES PERMISSION (
   PM_NO
);

CREATE TABLE EVENT (
   EVENT_NO   NUMBER   NOT NULL,
   START_DATE   VARCHAR2(50) NULL,
   FINISHI_DATE   VARCHAR2(50) NULL,
   CONTENT   VARCHAR2(4000)   NULL,
   ADMIN_NO   NUMBER   NOT NULL
);

ALTER TABLE EVENT ADD CONSTRAINT PK_EVENT PRIMARY KEY (
   EVENT_NO
);

ALTER TABLE EVENT ADD CONSTRAINT FK_ADMIN_TO_EVENT_1 FOREIGN KEY (
   ADMIN_NO
)
REFERENCES ADMIN (
   ADMIN_NO
);

/*빨강부분*/

CREATE TABLE SC_RATE (
   RATE_FIFTEEN   CHAR(2)   NOT NULL
);

ALTER TABLE SC_RATE ADD CONSTRAINT PK_SC_RATE PRIMARY KEY (
   RATE_FIFTEEN
);

CREATE TABLE MOVIE_IMG (
   MOVIE_IMG_NO   NUMBER   NOT NULL,
   MOVIE_IMG   VARCHAR2(500)   NULL,
   MOVIE_NO   NUMBER   NOT NULL
);

ALTER TABLE MOVIE_IMG ADD CONSTRAINT PK_MOVIE_IMG PRIMARY KEY (
   MOVIE_IMG_NO
);

ALTER TABLE MOVIE_IMG ADD CONSTRAINT FK_SC_MOVIE_TO_MOVIE_IMG_1 FOREIGN KEY (
   MOVIE_NO
)
REFERENCES SC_MOVIE (
   MOVIE_NO
);

CREATE TABLE SC_MOVIE (
   MOVIE_NO   NUMBER   NOT NULL,
   MOVIE_TITLE   VARCHAR2(200)   NULL,
   OPENNING_DATE   VARCHAR2(50)   NULL,
   MOVIE_ACTOR   VARCHAR2(200)   NULL,
   SUMMARY   VARCHAR2(500)   NULL,
   RATE_FIFTEEN   CHAR(2)   NOT NULL
);

ALTER TABLE SC_MOVIE ADD CONSTRAINT PK_SC_MOVIE PRIMARY KEY (
   MOVIE_NO
);

ALTER TABLE SC_MOVIE ADD CONSTRAINT FK_SC_RATE_TO_SC_MOVIE_1 FOREIGN KEY (
   RATE_FIFTEEN
)
REFERENCES SC_RATE (
   RATE_FIFTEEN
);

CREATE TABLE GENRE_SET (
   MOVIE_GENRE   CHAR(3)   NULL   ,
   MOVIE_NO   NUMBER   NOT NULL
);

ALTER TABLE GENRE_SET ADD CONSTRAINT FK_GENRE_TO_GENRE_SET_1 FOREIGN KEY (
   MOVIE_GENRE
)
REFERENCES GENRE (
   MOVIE_GENRE
);

ALTER TABLE GENRE_SET ADD CONSTRAINT FK_SC_MOVIE_TO_GENRE_SET_1 FOREIGN KEY (
   MOVIE_NO
)
REFERENCES SC_MOVIE (
   MOVIE_NO
);

CREATE TABLE GENRE (
   MOVIE_GENRE   CHAR(3)   NULL   ,
   GENRE_TYPE   VARCHAR(20)   NULL
);

ALTER TABLE GENRE ADD CONSTRAINT PK_GENRE PRIMARY KEY (
   MOVIE_GENRE
);

CREATE TABLE SCREEN_INF (
   SCHEDULE_NO   NUMBER   NOT NULL,
   START_DATE   VARCHAR2(50)   NULL,
   FINISH_DATE   VARCHAR2(50)   NULL,
   MOVIE_RUNNING   CHAR(3)   NULL   ,
   MOVIE_NO   NUMBER   NOT NULL,
   THEATER_NO   CHAR(1)   NOT NULL
);

ALTER TABLE SCREEN_INF ADD CONSTRAINT PK_SCREEN_INF PRIMARY KEY (
   SCHEDULE_NO
);

ALTER TABLE SCREEN_INF ADD CONSTRAINT FK_SC_MOVIE_TO_SCREEN_INF_1 FOREIGN KEY (
   MOVIE_NO
)
REFERENCES SC_MOVIE (
   MOVIE_NO
);

ALTER TABLE SCREEN_INF ADD CONSTRAINT FK_THEATER_TO_SCREEN_INF_1 FOREIGN KEY (
   THEATER_NO
)
REFERENCES THEATER (
   THEATER_NO
);

CREATE TABLE BUY (
   BUY_NO   NUMBER   NOT NULL,
   MOVIE_PRICE   NUMBER   NULL,
   SCHEDULE_NO   NUMBER   NOT NULL,
   SEAT_NO   CHAR(3)   NOT NULL,
   TICKET   NUMBER   NOT NULL
);

ALTER TABLE BUY ADD CONSTRAINT PK_BUY PRIMARY KEY (
   BUY_NO
);

ALTER TABLE BUY ADD CONSTRAINT FK_SCREEN_INF_TO_BUY_1 FOREIGN KEY (
   SCHEDULE_NO
)
REFERENCES SCREEN_INF (
   SCHEDULE_NO
);

ALTER TABLE BUY ADD CONSTRAINT FK_SEAT_TO_BUY_1 FOREIGN KEY (
   SEAT_NO
)
REFERENCES SEAT (
   SEAT_NO
);

ALTER TABLE BUY ADD CONSTRAINT FK_TICKET_BUY_TO_BUY_1 FOREIGN KEY (
   TICKET
)
REFERENCES TICKET_BUY (
   TICKET
);

CREATE TABLE THEATER (
   THEATER_NO   CHAR(1)   NOT NULL,
   TOTAL_SEAT_NUMBER   NUMBER   NULL,
   THEATER_TYPE   VARCHAR2(50)   NULL   
);

ALTER TABLE THEATER ADD CONSTRAINT PK_THEATER PRIMARY KEY (
   THEATER_NO
);

CREATE TABLE SEAT (
   SEAT_NO   CHAR(3)   NOT NULL,
   THEATER_NO   CHAR(1)   NOT NULL
);

ALTER TABLE SEAT ADD CONSTRAINT PK_SEAT PRIMARY KEY (
   SEAT_NO,
   THEATER_NO
);

ALTER TABLE SEAT ADD CONSTRAINT FK_THEATER_TO_SEAT_1 FOREIGN KEY (
   THEATER_NO
)
REFERENCES THEATER (
   THEATER_NO
);

CREATE TABLE TICKET_BUY (
   TICKET   NUMBER   NOT NULL,
   PAYMENT_DATE   TIMESTAMP DEFAULT SYSDATE,
   CANCEL_YN   CHAR(1)   NULL,
   MEMBER_NO   NUMBER   NOT NULL
);

ALTER TABLE TICKET_BUY ADD CONSTRAINT PK_TICKET_BUY PRIMARY KEY (
   TICKET
);

ALTER TABLE TICKET_BUY ADD CONSTRAINT FK_MEMBER_TO_TICKET_BUY_1 FOREIGN KEY (
   MEMBER_NO
)
REFERENCES MEMBER (
   MEMBER_NO
);

/* 초록부분 */

CREATE TABLE MEMBER (
   MEMBER_NO   NUMBER   NOT NULL,
   MEMBER_ID   VARCHAR2(50)   NOT NULL,
   MEMBER_PWD   VARCHAR2(100)   NOT NULL,
   MEMBER_NAME   VARCHAR2(50)   NOT NULL,
   MEMBER_NICK   VARCHAR2(50)    NULL,
   MEMBER_TEL   CHAR(11)   NOT NULL,
   MEMBER_EMAIL   VARCHAR2(50)   NOT NULL,
   QUIT_YN CHAR(1) DEFAULT 'N' CHECK( QUIT_YN IN('Y','N') ),
   MEMBER_GRADE   NUMBER   NULL,
   ENROLL_DATE  TIMESTAMP   DEFAULT  SYSDATE,
   MEMBER_POINT   NUMBER   NULL,
   GRADE_NO   NUMBER   NOT NULL,
   MEMBER_IMG   VARCHAR2(500)   NULL
);

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
   MEMBER_NO
);

ALTER TABLE MEMBER ADD CONSTRAINT FK_MEMBER_GRADE_TO_MEMBER_1 FOREIGN KEY (
   GRADE_NO
)
REFERENCES MEMBER_GRADE (
   GRADE__NO
);


CREATE TABLE MEMBER_GRADE (
   GRADE__NO   NUMBER   NOT NULL,
   GRADE_NAME   VARCHAR2(50)   NULL,
   GRADE_IF   NUMBER   NULL
);

ALTER TABLE MEMBER_GRADE ADD CONSTRAINT PK_MEMBER_GRADE PRIMARY KEY (
   GRADE__NO
);



CREATE TABLE REVIEW (
   REVIEW_NO   NUMBER   NOT NULL,
   CONTENT   VARCHAR2(4000)   NULL,
   REVIEW_DATE   TIMESTAMP     DEFAULT SYSDATE,
   REVIEW_STATUS   CHAR(1)   DEFAULT 'N' CHECK( REVIEW_STATUS IN('Y','N') ),
   STAR NUMBER   NULL,
   MOVIE_NO   NUMBER   NOT NULL
);

ALTER TABLE REVIEW ADD CONSTRAINT PK_REVIEW PRIMARY KEY (
   REVIEW_NO
);

ALTER TABLE REVIEW ADD CONSTRAINT FK_SC_MOVIE_TO_REVIEW_1 FOREIGN KEY (
   MOVIE_NO
)
REFERENCES SC_MOVIE (
   MOVIE_NO
);

CREATE TABLE DIBS_MOVIE (
   MEMBER_NO   NUMBER   NOT NULL,
   MOVIE_NO   NUMBER   NOT NULL
);

ALTER TABLE DIBS_MOVIE ADD CONSTRAINT FK_MEMBER_TO_DIBS_MOVIE_1 FOREIGN KEY (
   MEMBER_NO
)
REFERENCES MEMBER (
   MEMBER_NO
);

ALTER TABLE DIBS_MOVIE ADD CONSTRAINT FK_SC_MOVIE_TO_DIBS_MOVIE_1 FOREIGN KEY (
   MOVIE_NO
)
REFERENCES SC_MOVIE (
   MOVIE_NO
);


CREATE TABLE QNA (
   QNA_NO   NUMBER   NOT NULL,
   QNA_TITLE     VARCHAR2(20)    NULL,
   QNA_CONTENT   VARCHAR2(4000)   NULL,
   QNA_DATE    TIMESTAMP      DEFAULT  SYSDATE,
   QNA_DEL_STATUS   CHAR(1)     DEFAULT 'N' CHECK( QNA_DEL_STATUS IN('Y','N') ),
   QNA_ANSWER   VARCHAR2(4000)   NULL,
   QNA_ANSWER_DATE   TIMESTAMP     DEFAULT  SYSDATE,
   MEMBER_NO    NUMBER   NOT NULL,
   ADMIN_NO  NUMBER   NOT NULL
);

ALTER TABLE QNA ADD CONSTRAINT PK_QNA PRIMARY KEY (
   QNA_NO
);

ALTER TABLE QNA ADD CONSTRAINT FK_MEMBER_TO_QNA_1 FOREIGN KEY (
   MEMBER_NO
)
REFERENCES MEMBER (
   MEMBER_NO
);

ALTER TABLE QNA ADD CONSTRAINT FK_ADMIN_TO_QNA_1 FOREIGN KEY (
   ADMIN_NO
)
REFERENCES ADMIN (
   ADMIN_NO
);

/* 매점 보라 */

CREATE TABLE PRODUCT (
   PRODUCT_NO   NUMBER   NOT NULL,
   PRODUCT_NAME   VARCHAR2(100)   NULL,
   PRODUCT_PRICE   NUMBER   NULL,
   PRODUCT_DETAIL VARCHAR2(100)   NULL,
   PRODUCT_IMAGE VARCHAR2(500)   NULL,
   COUNT   NUMBER   NULL,
   DELETE_YN    CHAR(1) DEFAULT 'N' CHECK(DELETE_YN IN('Y','N') ),
   PRODUCT_DATE   VARCHAR2(100)   NULL,
   PRODUCT_REVISE   VARCHAR2(100)   NULL
);

ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
   PRODUCT_NO
);


CREATE TABLE STORE_ORDER (
   S_ORDER_NO       NUMBER       NOT NULL,
   "DATE"            TIMESTAMP   NULL,
   TOTAL           NUMBER       NULL,
   STATUS           CHAR(1)       NULL,
   MEMBER_NO       NUMBER       NOT NULL
);

CREATE TABLE ORDER_INF (
   ORDER_NO   NUMBER   NOT NULL,
   PRODUCT_NUM   NUMBER   NULL,
   S_ORDER_NO   NUMBER   NOT NULL,
   PRODUCT_NO   NUMBER   NOT NULL
);

CREATE TABLE STORE_PAYMENT (
   STORE_PM_NO       NUMBER       NOT NULL,
   PAYMENT_WAY       VARCHAR2(5)   NULL,
   STORE_PRICE       NUMBER       NULL,
   STORE_STATUS     CHAR(1)     DEFAULT 'N' CHECK(STORE_STATUS IN('Y','N') ),
   POINT_MINUS       NUMBER       NULL,
   POINT_PLUS       NUMBER       NULL,
   S_ORDER_NO       NUMBER       NOT NULL,
   "ERROR"           NUMBER       NOT NULL
);

CREATE TABLE CART (
   CART_NO       VARCHAR(255)   NOT NULL,
   MEMBER_NO   NUMBER           NOT NULL,
   PRODUCT_NO   NUMBER           NOT NULL
);

CREATE TABLE ERRORCODE (
   ERROR           NUMBER           NOT NULL,
   ERROR_CONTENT   VARCHAR2(200)   NULL
);

ALTER TABLE STORE_ORDER ADD CONSTRAINT PK_STORE_ORDER PRIMARY KEY (
   S_ORDER_NO
);

ALTER TABLE ORDER_INF ADD CONSTRAINT PK_ORDER_INF PRIMARY KEY (
   ORDER_NO
);

ALTER TABLE STORE_PAYMENT ADD CONSTRAINT PK_STORE_PAYMENT PRIMARY KEY (
   STORE_PM_NO
);

ALTER TABLE CART ADD CONSTRAINT PK_CART PRIMARY KEY (
   CART_NO
);

ALTER TABLE ERRORCODE ADD CONSTRAINT PK_ERRORCODE PRIMARY KEY (
   ERROR
);

------

SELECT 'DROP TABLE "' || TABLE_NAME || '" CASCADE CONSTRAINTS;' FROM user_tables;

DROP TABLE "NOTICE" CASCADE CONSTRAINTS;
DROP TABLE "PERMISSION" CASCADE CONSTRAINTS;
DROP TABLE "EVENT_IMG" CASCADE CONSTRAINTS;
DROP TABLE "FAQ" CASCADE CONSTRAINTS;
DROP TABLE "ADMIN" CASCADE CONSTRAINTS;
DROP TABLE "EVENT" CASCADE CONSTRAINTS;
DROP TABLE "SCREENING_RATE" CASCADE CONSTRAINTS;
DROP TABLE "MOVIE_IMG" CASCADE CONSTRAINTS;
DROP TABLE "SCREEN_MOVIE" CASCADE CONSTRAINTS;
DROP TABLE "GENRE_SET" CASCADE CONSTRAINTS;
DROP TABLE "GENRE" CASCADE CONSTRAINTS;
DROP TABLE "SCREEN_INF" CASCADE CONSTRAINTS;
DROP TABLE "BUY" CASCADE CONSTRAINTS;
DROP TABLE "THEATER" CASCADE CONSTRAINTS;
DROP TABLE "SEAT" CASCADE CONSTRAINTS;
DROP TABLE "TICKET_BUY" CASCADE CONSTRAINTS;
DROP TABLE "MEMBER" CASCADE CONSTRAINTS;
DROP TABLE "MEMBER_GRADE" CASCADE CONSTRAINTS;
DROP TABLE "REVIEW" CASCADE CONSTRAINTS;
DROP TABLE "DIBS_MOVIE" CASCADE CONSTRAINTS;
DROP TABLE "QNA" CASCADE CONSTRAINTS;
DROP TABLE "PRODUCT" CASCADE CONSTRAINTS;
DROP TABLE "ORDER_INF" CASCADE CONSTRAINTS;
DROP TABLE "CART" CASCADE CONSTRAINTS;
DROP TABLE "ERRORCODE" CASCADE CONSTRAINTS;
DROP TABLE "SC_RATE" CASCADE CONSTRAINTS;
DROP TABLE "SC_MOVIE" CASCADE CONSTRAINTS;
DROP TABLE "SC_INF" CASCADE CONSTRAINTS;
